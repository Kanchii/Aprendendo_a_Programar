#include <bits/stdc++.h>

using namespace std;

#define INF 0x3f3f3f3f
#define WHITE 0
#define GRAY 1
#define BLACK 2
#define PI 3.14159265
#define EPS 0.0000001
#define MOD 1000000007
#define MAX 50000
#define MAX2 110
#define COLINEAR 0
#define CLOCK 1
#define COUNTERCLOCK 2

typedef unsigned long long int ull;
typedef long long ll;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<vii> vvii;
int n;

int solve(int *vet){
    int sum = 0;
    for(int i = 0; i < n; i++){
        sum += vet[i];
    }
    int dp[n + 1][sum + 1];
    for(int i = 0; i <= n; i++){
        dp[i][0] = 1;
    }
    for(int i = 1; i <= sum; i++){
        dp[0][i] = 0;
    }
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= sum; j++){
            dp[i][j] = dp[i - 1][j];
            if(vet[i - 1] <= j){
                dp[i][j] |= dp[i - 1][j - vet[i - 1]];
            }
        }
    }
    int res = sum;
    for(int i = sum / 2; i >= 0; i--){
        if(dp[n][i]){
            res = abs(2 * i - sum);
            break;
        }
    }
    return res;
}    

int main() {
    while(scanf("%d", &n) != EOF){
        int vet[n + 1];
        for(int i = 0; i < n; i++){
            scanf("%d", &vet[i]);
        }

        printf("%d\n", solve(vet));

    }


    return 0;
}
