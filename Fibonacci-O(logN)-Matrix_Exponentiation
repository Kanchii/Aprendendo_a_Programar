#include <bits/stdc++.h>

#define INF 0x3f3f3f3f
#define MAX 50005
#define all(x) (x.begin(), x.end())
#define mp(x, y) (make_pair(x, y))
#define endl '\n'
#define max(a, b) ((a) > (b) ? (a) : (b))

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<vi> vii;
typedef pair<int, int> pii;
typedef vector<pii> vpii;
typedef vector<vpii> vvpii;
 
int fib(ull n){
  int F[2][2] = {{1,1},{1,0}};
  power(F, n);				//Se quiser saber o número de chamadas recursivas necessárias para calcular fib(n)
  return F[0][0];			//faça, return (2*F[0][0]) - 1;
}
 
void power(int F[2][2], ull n){
  if( n == 0 || n == 1)
      return;
  int M[2][2] = {{1,1},{1,0}};
 
  power(F, n/2);
  multiply(F, F);
 
  if (n%2 != 0)
     multiply(F, M);
}
 
void multiply(int F[2][2], int M[2][2]){
  int x =  F[0][0]*M[0][0] + F[0][1]*M[1][0];
  int y =  F[0][0]*M[0][1] + F[0][1]*M[1][1];
  int z =  F[1][0]*M[0][0] + F[1][1]*M[1][0];
  int w =  F[1][0]*M[0][1] + F[1][1]*M[1][1];
 
  F[0][0] = x;
  F[0][1] = y;
  F[1][0] = z;
  F[1][1] = w;
}

int main() {
	ios_base::sync_with_stdio(false);
	cout << fib(20) << endl;
	cout << fib(123) << endl;
	cout << fib(1) << endl;
	cout << fib(23) << endl;

    return 0;
}
