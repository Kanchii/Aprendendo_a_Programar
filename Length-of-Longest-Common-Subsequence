#include <bits/stdc++.h>

using namespace std;

typedef unsigned long long int ull;
typedef unsigned int ui;
typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<vii> vvii;

#define INF 0x3f3f3f3f
#define WHITE 0
#define GRAY 1
#define BLACK 2
#define PI 3.14159265
#define EPS 1e-9
#define MOD 1000000007
#define MAX 100100
#define ALPHABETIC_SIZE 30

int dp[550][550];

int solve(string a, string b, int p1, int p2){
    if(p1 >= a.size() or p2 >= b.size()){
        return 0;
    }
    if(dp[p1][p2] != -1){
        return dp[p1][p2];
    }

    if(a[p1] == b[p2]){
        return dp[p1][p2] = (1 + solve(a, b, p1 + 1, p2 + 1));
    } else {
        return dp[p1][p2] = max(solve(a, b, p1 + 1, p2), solve(a, b, p1, p2 + 1));
    }
}

int main(int argc, const char *argv[]){

  string a, b;
  cin >> a >> b;
  
  cout << "Tamanho da maior subsequencia comum entre (a) e (b) eh: " << solve(a, b, 0, 0) << endl;

  return 0;
}
